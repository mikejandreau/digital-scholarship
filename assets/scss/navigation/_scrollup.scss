// Scrollup and scroll-to-content button styles 
// includes options for solid and outline circle buttons
// and also a fancy mouse-shaped scroll-to-content button
// just comment out what you don't need 
// --------------------------------------------------

html {
	scroll-behavior: smooth;
}

div:focus,
section:focus {
  outline: none;
}

#css-support-msg {
	text-align: center;
	color: green;
	
	display: none;
}

#css-support-msg.supported {
	display: block;
}


// scrollup button 
// --------------------------------------------------
#scroll-to-top {
	display: block;
	text-align: center;
	text-transform: uppercase;
	box-sizing: border-box;
	position: fixed;
	z-index: 5000;
	cursor: pointer;
	right: $chevronWidth;
	bottom: $chevronWidth;
	font-size: $chevronWidth;
	line-height: $scrollUpButtonSize * ($squareRoot * 2);
	width: $scrollUpButtonSize * ($squareRoot * 2);
	height: $scrollUpButtonSize * ($squareRoot * 2);
	transition: all $transistion_duration;
	border-radius: 50%; // change to 0 to make the button square
	padding: 0;
	opacity: 0;

	// solid button
	// background: $color_link; 
	// border: $borderWidth solid transparent;
	// color: $color_white;

	// &:hover, 
	// &:focus,
	// &:active {
	// 	background: darken($color_link, 10%); 
	// 	color: $color_white;
	// 	outline: none;
	// }

	// button with outline only 
	background: none; 
	border: $borderWidth solid $color_link;
	color: $color_link;

	&:hover, 
	&:active {
		color: darken($color_link, 10%); 
		border-color: darken($color_link, 10%);  
	}

	&:focus {
		outline: none;
	}

	&:before {
		display: inline-block;
		box-sizing: border-box;
		border-style: solid;
		border-width: $borderWidth $borderWidth 0 0;
		height: $chevronWidth;
		width: $chevronWidth;
		top: $scrollUpButtonSize;
		content: '';
		position: relative;
		transform: rotate(-45deg);
		vertical-align: top;
	}
}






// scroll-to-content button (mouse-shaped)
// to use this option, comment out the down-chevron CSS below
// --------------------------------------------------
// @keyframes scroll {
// 	0% { transform: translateY(0); }
// 	50% { transform: translateY(8px); }
// 	100% { transform: translateY(0); }
// }

// .scroll-to-content {
// 	z-index: 5;
// 	display: block;
// 	border: 2px solid $color_mdgray;
// 	border-radius: 16px;
// 	height: 44px;
// 	width: 28px;
// 	text-align: center;
// 	position: absolute;
// 	bottom: $column_margin * 2;
// 	right: $column_margin * 2;

// 	&:after {
// 		display: inline-block;
// 		background-color: $color_mdgray;
// 		border-radius: 3px;
// 		height: 8px;
// 		width: 3px;
// 		content: "";
// 		animation: scroll ($transistion_duration * 5) ease-out infinite forwards;
// 	}

// 	&:focus {
// 		outline: none;
// 	}
// }


// scroll-to-content button (down-chevron)
// to use this option, comment out the mouse-shaped CSS above
// --------------------------------------------------
@keyframes arrowBounce {
	0% { transform: translateY(0); }
	50% { transform: translateY(-10px); }
	100% { transform: translateY(0); }
}

.scroll-to-content {
	z-index: 5;
	display: block;
	text-align: center;
	text-transform: uppercase;
	box-sizing: border-box;
	position: absolute;
	cursor: pointer;
	right: $chevronWidth;
	bottom: $chevronWidth * 6;
	font-size: $chevronWidth;
	line-height: $scrollUpButtonSize * ($squareRoot * 2);
	width: $scrollUpButtonSize * ($squareRoot * 2);
	height: $scrollUpButtonSize * ($squareRoot * 2);
	transition: all $transistion_duration;
	border-radius: 50%; // change to 0 to make the button square
	padding: 0;
	animation: arrowBounce ($transistion_duration * 5) ease-out infinite forwards;

	@include laptop {
		bottom: $chevronWidth * 2;
	}

    // position bouncing arrow in center of hero, calculates negative left margin based on width
    left: 50%;
    margin-left: -($scrollUpButtonSize * ($squareRoot * 2)) / 2 !important;



	// solid button
	// background: $color_link; 
	// border: $borderWidth solid transparent;
	// color: $color_white;

	// &:visited {
	// 	color: $color_white;
	// }

	// &:hover, 
	// &:focus,
	// &:active {
	// 	background: darken($color_link, 10%); 
	// 	color: $color_white;
	// 	outline: none;
	// }



	// button with outline only 
	background: none; 
	// border: $borderWidth solid $color_link; // chevron inside circle, comment out for plain chevron
	color: $color_link;

	&:visited {
		color: $color_link;
	}

	&:hover, 
	&:active {
		color: darken($color_link, 10%); 
		border-color: darken($color_link, 10%);  
	}

	&:focus {
		outline: none;
	}



	// chevron 
	&:before {
		display: inline-block;
		box-sizing: border-box;
		border-style: solid;
		border-width: $borderWidth $borderWidth 0 0;

		// height: $chevronWidth; // chevron inside circle, comment out for plain chevron
		// width: $chevronWidth; // chevron inside circle, comment out for plain chevron
		// top: $chevronWidth * 1.1; // chevron inside circle, comment out for plain chevron

		height: $chevronWidth * 1.8; // plain chevron, comment out for circle
		width: $chevronWidth * 1.8; // plain chevron, comment out for circle
		top: $chevronWidth * .6; // plain chevron, comment out for circle

		content: '';
		position: relative;
		transform: rotate(135deg);
		vertical-align: top;
	}
}


